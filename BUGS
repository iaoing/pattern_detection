DEPRECATED:  We now manage bugs with change.lanl.gov.
This file is no longer maintained.



========================================================================
OPEN:

7) I've seen a crash with a core backtrace that says something about ld 
loading.

6) There may be something weird happening when we do big N-N workloads.  
Need to test this.  Maybe especially if it is layered.

8) Need to add mapping in the ad_plfs layer so that users only know about
frontends and plfs-fuse and plfs-adio both transparently use the backend.
we'll need an /etc/plfsrc file or something.

9) jvpn-132-65:/tmp/plfs_mnt/SC09/data/summary>./get_data >! data
cat: stdout: Result too large

10) the ADIO layer on RRZ is failing on the read close due to a debug 
message trying to print a string that isn't valid (the path of
the file)

11) I created a bunch of files and then I tried to delete them and some
failed with permission denied errors.  I went to the back end and there
were still many directories like this (all for 300_writers....):
300_writers.107.cuda036.localdomain
where 300_writers was the name of the file.  So I tried to ls the directory
but it failed.  the bits were:
d-wxr-xr-t
so I chmod'd it to 0777 and it looked like:
drwxrwxrwx
and then I could delete it...
so maybe the silly rename didn't change the mode correctly?

12) Maybe if the file is not available, the ThreadPool stuff makes it look 
like it is?  Like do a read from a file that does not exist and see what
happens.  Both through FUSE and ADIO.

13) also, something weird which might be a FUSE bug.

cd /mnt/plfs
mkdir top
cd top
mkdir dir1
mkdir dir2
cd dir1
file ../dir2
# this is passed correctly from our fuse layer as /top/dir2
ln -s ../dir2 symlink
# this is passed incorrectly from our fuse layer as ../dir2

CLOSED


1) doing a cvs co often fails with:
cvs [checkout aborted]: cannot rename file CVS/Entries.Backup to CVS/Entries:
Function not implemented This is because PLFS currently cowardly refuses to
rename an open file.  CVS only sometimes runs into this problem; when it
happens you can just cvs co over and over again until finally it works.
RESOLVED:  I think I fixed this.  I put some code in rename to rename open
files, and I wrote a test, and I tried the cvs stuff and it hasn't broke!  It
did break again and I fixed it again.  Check the ChangeLog of 0.1.5.

2) cd /users/johnbent/Testing/openmpi-1.3.3/ompi/mca/io/romio/romio/test
   mpirun -np 1 ./large_file -fname /tmp/bar
   mpirun -np 1 ./large_file -fname plfs:/tmp/bar
This fails because there is a file in the place where PLFS wants to make
a container.  RESOLVED: when this error is seen, unlink the file, and try
again.

3) bad reference counting in the Plfs_fd structure.  See the ChangeLog for 
0.1.5

4) truncate in the Container was removing other thread's open file handles.
See the ChangeLog of 0.1.5

5) We seem to be having a problem again where the unlink fails and we
have to do silly rename.  I think this is related to the change in
container identification from SUID bit to access file.  Now we create the
access file in the temp before the rename.  When the rename fails we 
try to unlink the directory but can't since the access file is in there.
In the time I took to write this, I could have fixed the bug....

9) Need to add a version dropping so that we can make sure we're backward
compatible.  this will be even more important when we add the metadata
distribution layer which has the potential to really confuse backward
compatibilits
